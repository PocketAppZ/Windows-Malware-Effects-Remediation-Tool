using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Diagnostics;
using Microsoft.Win32;
using System.IO;
using iNKORE.UI.WPF.Modern.Controls;
using System.Windows.Input;

namespace Windows_Malware_Effects_Remediation_Tool
{
    /// <summary>
    /// Interaction logic for RunElevated.xaml
    /// </summary>
    public partial class RunSystem : Window
    {
        public RunSystem()
        {
            InitializeComponent();
            if (Convert.ToInt32(Registry.CurrentUser.OpenSubKey(@"SOFTWARE\Orange Group\Windows Malware Effects Remediation Tool").GetValue("TopMost")) == 1)
                this.Topmost = true;
            runTextBox.Focus();
        }

        private void cancelButton_Click(object sender, RoutedEventArgs e)
        {
            this.Close();
        }

        private async void okButton_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + @"\Orange Group\Windows Malware Effects Remediation Tool");
                File.WriteAllBytes(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + @"\Orange Group\Windows Malware Effects Remediation Tool\PsExec.exe", Properties.Resources.PsExec);
                Process process = new Process();
                process.StartInfo.FileName = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + @"\Orange Group\Windows Malware Effects Remediation Tool\PsExec.exe";
                process.StartInfo.Arguments = "-accepteula -i -s \"" + runTextBox.Text + "\"";
                process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                process.StartInfo.CreateNoWindow = true;
                process.Start();
                runTextBox.IsEnabled = false;
                okButton.IsEnabled = false;
                cancelButton.IsEnabled = false;
                await Task.Delay(1000);
                this.Close();
            }
            catch
            {
                ContentDialog contentDialog = new ContentDialog();
                contentDialog.Title = "Error";
                contentDialog.Content = "There was an error starting the process \"" + runTextBox.Text + "\". Make sure you typed the name correctly and try again.";
                contentDialog.PrimaryButtonText = "OK";
                await contentDialog.ShowAsync();
            }
        }

        private async Task Delay(int howlong)
        {
            await Task.Delay(howlong);
        }

        private void Window_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.Key == Key.Return)
            {
                if(okButton.IsEnabled == true)
                {
                    okButton_Click(sender, e);
                } else {}
            }
        }
    }
}
